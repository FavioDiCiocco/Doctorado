Cada una de las carpetas contiene archivos de C que usé para correr el
modelo en alguna fase del trabajo. Acá voy a ir anotando qué es lo que
se suponía que hiciera el código en esa fase.

.) Prueba_tiempos:
-------------------

Ya me olvidé que era esta etapa, creo que quería observar si podía reducir los tiempos de simulación
mirando las varianzas de las opiniones en cada tópico.

.) Actualización Opiniones:
---------------------------

Lo que hice es tomar el código de Medidas_polarización e implementar el uso de una lista de vecinos en
vez de una matriz de Adyacencia. También armé matrices para precalcular algunos datos previos
que surgen de funciones no lineales y que si los puedo precalcular reducen tiempo de simulación.
Todo esto lo hice en consonancia con el ejemplo de código que me pasó Hugo. Esto también implicó un
cambio en la construcción de las matrices de adyacencia, las cuales ahora se construyen indicando
los enlaces entre agentes, no escribiendo la matriz entera. Este código lo voy a usar para
realizar un barrido en el espacio Beta-Kappa y otro en el espacio Beta-Cos(delta). Si bien hubo algunos
problemas antes, decidí aprovechar y rehacer todas mis simulaciones, cosa de tener todas mis redes
construidas con grado medio=10.

.) Extensión Testigos:
----------------------

La idea es tomar los estados resueltos en el espacio Beta-Kappa para Betas menores a 1 y evolucionar
esos estados unos 20000 pasos extras, que implican un tiempo extra de 2000. Busco ver en ese tiempo
el comportamiento de los agentes en función del tiempo. En principio sólo necesito guardarme los datos
de los testigos.

.) Func_Sign:
-------------

Teníamos la idea de que la panza que se produce en el gráfico de la entropía en el espacio de parámetros 
tenía que ver con que en Kappas grandes la función de tanh saturaba. Así que probamos hacer simulaciones
sacando la tanh y poniendo una función signo. Hice un barrido grueso en Beta-Kappa y vimos qué tal
da el gráfico de entropía.

.) Probas_pol:
--------------

Estoy intentando recordar la función de este código, pero no puedo comprender exactamente para qué
lo quería. Era calcular probabilidad de polarización de ciertas cosas. Pero no me acuerdo qué cosas.
Ese es el problema de querer documentar mucho tiempo después. En la facultad veré de revisar esto de nuevo.

.) Comparacion_datos:
---------------------

Estamos directamente usando el código que nos pasó Hugo para realizar simulaciones de 10000 agentes
porque mi código estaba tardando demasiado. Así que adapté el código de Hugo para que trabaje con dos
tópicos. La idea es que haga un barrido en una parte del espacio Beta-Cos(delta)

.) Agentes_Fijos:
-----------------

La idea es que un grupo de los agentes tengan opinión nula durante toda la evolución. Esto era para
comparar mejor las distribuciones de las encuestas con las distribuciones simuladas. 
Al final no creo que use estos datos, pero están ya simulados.
