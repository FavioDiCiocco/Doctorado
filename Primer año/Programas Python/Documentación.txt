PruebaMod
-----------
En esta carpeta me guardo los datos de opiniones iniciales, Varprom, opiniones
finales y opiniones de testigos del modelo con campo externo. Recién estamos
arrancando, así que esto es una simple prueba. La idea sería ver qué hace el código
al moverme en el espacio de los parámetros alfa, intensidad de campo e intensidad
de decaimiento de las opiniones.

Python
-------
Acá voy a poner los programas de Python que voy a estar usando para analizar mis datos.
Lo separo para no tener tantos archivos dando vueltas.
  Decidí poner una carpeta de Python dentro de cada una de
las carpetas con datos. Voy a empezar a hacer esto a partir de la carpeta de 
Logistica_1D. Esto lo hago porque a medida que cambie la fase del trabajo,
los parámetros y datos que guarde irán variando, esto va a hacer que si quiero tener un
archivo separado en el cuál guardar mis funciones, voy a tener que estar corrigiendo estas
funciones con cada nueva fase. Y entonces no voy a poder retornar a fases viejas.
Para evitar problemas es que pondré carpetas Python dentro de las carpetas con datos.

Temporal
--------
Esta carpeta no creo que dure mucho tiempo. Estoy guardando los datos que dieron
muy mal del modelo cuando usé la ecuación dinámica de un punto de bifurcación
transcrítico.

Transcritico
------------
En esta carpeta me guardo dos tipos de archivos, el de Opiniones y el de Testigos.
El de opiniones tiene las opiniones iniciales, finales, variación promedio y semilla
del sistema, el de Testigos tiene los valores de opiniones de 5 agentes en
función del tiempo. Esto lo estoy haciendo para el sistema con la ecuación dinámica
del punto de bifurcación transcrítico. Para esto agrego al modelo el coeficiente
mu (regula la intensidad del primer término) y considero los valores cuadrados
de las opiniones en la sumatoria de las contribuciones de los vecinos.

Conjunto_pequeño:
------------------
En esta carpeta voy a guardar datos del sistema armado con dos o tres agentes. Estos
datos los voy a tener todos mezclados, no me parece que haga falta separarlos en 
carpetas diferenciadas, total el archivo de python está armado para diferenciar estos
archivos. La idea de esto es observar si el sistema se comporta como lo estudiado en el
caso analítico. Esto significaría que el 0 es un punto fijo estable o inestable dependiendo
del signo de mu, mientras que el otro punto fijo siempre tiene una dirección que aleja a las
opiniones. Los datos a guardar serán opiniones iniciales y finales, Varprom y testigos.
No aclaré, pero este es el sistema donde reemplace la tanh por la ecuación cuadrática.

Trans_ln:
-----------
En esta carpeta guardo archivos de datos que se generan de forma idéntica a los archivos
generados para la carpeta Conjunto_pequeño. La diferencia es que el modelo ahora tiene
un logaritmo en la ecuación dinámica. Vale aclarar que en este caso estoy resolviendo
la ecuación dinámica que en mi cuaderno definí como "Opción 1". Esto significa que la
sumatoria se encuentra por fuera del logaritmo. Entonces el segundo término lo que hace
es calcular el logaritmo del producto de la matriz de superposición y el vector de opiniones
del vecino, y lo suma sobre todos los vecinos. La opción 2 es sumar estos productos de
matriz y vector y luego al final calcular un sólo logaritmo. La diferencia entre estas
dos expresiones es que la expresión 1 se puede reescribir como si fuera un sólo
logaritmo con la productoria de la matriz de superposición por el vector de opiniones sobre
todos los vecinos, mientras que la opción 2 es un sólo logaritmo pero de la sumatoria.
La opción 2 me gusta más porque no deja que los valores de opiniones en el argumento
se vuelvan demasiado grandes.

Modelo_estocástico:
--------------------
En esta carpeta guardaré los archivos que vaya generando del modelo en el cual los agentes
evolucionan sus opiniones utilizando la ecuación transcrítica logarítmica con interacciones
de a pares. Modifiqué los archivos de datos porque ahora voy a volver a trabajar con muchos
agentes, así que vuelvo a tener archivos de Opiniones_... y Testigos_... . La forma de
realizar la selección del segundo agente es un tema a definir y de gran relevancia en
la caracterización de la evolución de este sistema. Es posible que esta carpeta contenga
varias sub carpetas.
Al final para esto Pablo decía de arrancar desde un modelo inicial mucho más simplificado,
con redes estáticas y partiendo del modelo de Baumann. Yo me había mandado a aplicar esto
al modelo con el logaritmo.

Din_log:
--------
Acá guardo los datos del modelo con el término logarítmico corregido. En la pc de la facultad
tengo algunos archivos generados para probar que el programa corre y cuánto tarda cada
archivo en generarse. Los archivos de verdad están armados en la pc de Oporto, ahí armé
un barrido en el espacio de parámetros de mu, alfa y cdelta, barriendo mu [0.1, 1],
alfa [0,1] y cdelta [0,1]. Todavía nunca revisé el comportamiento del sistema en
este espacio de parámetros, tengo que armar gráficos al respecto.

Trabajos Pablo:
---------------
Pablo me pidió que codeara en Python los modelos del votante y el de Deffuant. Esta carpeta
contiene esos códigos en Python en los cuales además empecé a probar cómo es esto de definir
funciones en archivos externos y después importarlas, todo con el objetivo de que los
códigos se vean más limpios y mucho más fáciles de entender lo que están haciendo.
Por tanto, para cada modelo tengo además armado un archivo con las funciones propias
de ese modelo.

Logistica_1D:
--------------
Acá vienen los archivos construídos utilizando la ecuación dinámica con el modelo
de la ecuación logística para el caso unidimensional. Estos archivos son Opiniones
y Testigos. En el primero irán el estado inicial del sistema, variación promedio,
estado final, matriz de adyacencia y semilla. En el segundo irán las opiniones de
los primeros seis agentes. A diferencia de los modelos anteriores, ahora los parámetros
son otros. Para empezar no hay cosdelta porque voy a trabajar con un único tópico.
K y mu fueron ¿definitivamente? eliminados, y en su lugar introduje el valor que determina
cuando la suma de las opiniones de un vecino me aumenta o disminuye mi interés, "umbral".
Preferí no seguir con la lógica de letras griegas. Demándenme.

Saturacion_1D:
--------------
En esta etapa el modelo tiene una función logística en el segundo término de la ecuación
dinámica y además tiene un término de saturación cuyo objetivo es hacer que la opinión de
los agentes decaiga eventualmente, de forma que el punto fijo del sistema no esté en
1, sino que esté en 0. Los archivos generados en este caso son archivos de Opiniones y
archivos de Testigos. En el primero irán el estado inicial del sistema, variación promedio,
estado final, matriz de adyacencia y semilla. En el segundo irán las opiniones de
los primeros seis agentes. Los parámetros importantes de este modelo son alfa y chi, siendo
este último el "umbral".
 Voy a empezar a separar los datos en carpetas. La ventaja de esto por un lado es que puedo
explorar las carpetas con los datos sin que se me trabe tanto la pc por tener que cargar tantos
archivos. Por otro lado, lo hago esto para poder comparar el comportamiento del sistema ante
distintas variaciones. Y así no me olvido cuáles son esas variaciones.
 .) Sin_terma: En este caso evoluciono el sistema con lambda = 0.005, termalización cero y
con memoria inicial igual al interés inicial.
 .) Mem_cero: En este caso evoluciono el sistema con lambda = 0.005, termalización cero y
con memoria inicial igual a cero.
 .) Lambda_01: En este caso evoluciono el sistema con lambda = 0.1, termalización cero y
con memoria inicial igual al interés inicial.
 .) Sin_lineal: El sistema tiene lambda = 0,01, saqué la termalización, la saturación
arranca en cero, armo archivos para guardar los datos de saturación, los intereses iniciales
están restringidos a la región [0,0.3] y removí el término lineal.
 .) Sat_lenta: Es igual a Sin_lineal, pero le agregué un factor 0.5 a la ecuación dinámica de
la saturación. Mi idea es que con eso la saturación crezca más lento y entonces el sistema
dure más tiempo en su pico de interés. No fue tan iluminador como esperaba, así que después
cambié los datos y simplemente cambié el lambda a 0.005.

Variacion_olvido:
-----------------
Quise hacer una etapa aparte en la cual pueda ver claramente cómo cambia el máximo interés al
cual llegan los agentes en función del olvido. Para eso me guardé en una carpeta de Datos (eso
va a ser el default a menos que una etapa se divida en varias partes distintas) los archivos
de Opiniones, Testigos y Saturación. Realmente igual sólo usé los archivos de Testigos, el
resto no me servía. Y además no podía usar las funciones de graficación ya armadas sin retocarlas
un poco. No es que sea imposible o muy difícil, pero me pareció que no valía la pena hacer eso.
 Los datos estos los hice con la ecuación dinámica con el término logístico y el de saturación,
sin el término lineal.
